---
title: "Interactions 1"
subtitle: "Princeton University"
author: "Jason Geller, PH.D.(he/him)"
date: 'Updated:`r Sys.Date()`'
footer: "PSY 503: Foundations of Statistics in Psychology"
format: 
  revealjs:
    theme: blood
    css: slide-style.css
    multiplex: true
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
    fontsize: "25pt"
execute:
  freeze: auto
  echo: true
  message: false
  warning: false
  fig-align: center
  fig-width: 12
  fig-height: 8
  editor_options: 
  chunk_output_type: inline
  code-overflow: wrap
  html:
    code-fold: true
    code-tools: true
---

## Packages

```{r}
#| echo: true
#| 
library(pacman)
p_load("tidyverse", "easystats", "broom", "kableExtra", "interactions", "emmeans", "moderndive")
```

## Today

-   Testing interactions/moderation analysis

    -   Categorical x Continuous
    -   Continuous x Continuous

## Interactions

```{r}
#| eval: false
#| 

lm(plant_growth ~ sun_exposure + water)

```

![](images/inter.png){fig-align="center"}

## Interactions

```{r, eval=FALSE}

lm(plant_growth ~ sun_exposure * water)
```

![](images/inter1.png){fig-align="center"}

## What is a moderator?

-   A moderator variable Z is a variable that alters the strength of the
    relationship between X and Y

![](images/moderation2.png){fig-align="center"}

-   To test for moderation we can add the interaction between Z and X to
    our model

$$
\hat{Y}=b_{0}+b_{1}X (sunshine)+ b_2Z (water) + b_3X*Z$$

## What do interactions look Like?

![](images/types-of-interaction-flat.png){fig-align="center"}

## Interaction shapes

-   Disordinal

    -   Cross-over

![](images/disord.png){fig-align="center"}

## Interaction shapes

-   Ordinal

![](https://uopsych.github.io/psy612/lectures/14-interactions_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align="center"}

## Interaction shapes

-   Ordinal

![](https://uopsych.github.io/psy612/lectures/14-interactions_files/figure-revealjs/unnamed-chunk-20-1.png){fig-align="center"}

## Today's Dataset

-   Student evaluations for a sample of 463 courses taught by 94
    professors from the University of Texas at Austin

-   Six students rated the professors' physical appearance

```{r}
evals_agegend=read_csv("https://raw.githubusercontent.com/jgeller112/psy503-psych_stats/master/evals.csv")
evals1= evals_agegend %>%
dplyr::select(ID, score, age, gender)
```

```{r, echo=FALSE}
summary(evals1)
```

## Research question

-   Does Age and Sex (Males, Females) of the instructor influence
    instructor ratings?

    -   DV: Evals
    -   IV:
        -   Age
        -   Gender
        -   Age\*Gender interaction

## Scatter plot

```{r}
#| fig-align: center

ggplot(evals1, aes(x = age, y = score, color = gender)) +
  geom_point() +
  labs(x = "Age", y = "Teaching Score", color = "Gender") +
  geom_smooth(method = "lm", se = FALSE)
```

## How to Conduct Moderation Analysis?

-   Moderation analysis can be conducted by adding one or multiple
    interaction terms in a regression analysis
-   Z is a moderator for the relation between X and Y, we can fit a
    regression model

$$\begin{eqnarray*} 
Y & = & b_{0}+b_{1}*X+b_{2}*Z+b_{3}*X*Z+e \\ & = & \begin{cases} b_{0}+b_{1}*X+e & \mbox{For females}(Z=0)\\ b_{0}+b_{2}+(b_{1}+b_{3})*X+e & \mbox{For males}(Z=1) \end{cases} \end{eqnarray*}$$

-   When Z=0 (females),the effect of X on Y is $b_1+b_3âˆ—0=b_1$

-   When Z=1 (males), the effect of X on Y is $b_1 + b_3*(1)$

## Steps for moderation analysis

A moderation analysis typically consists of the following steps:

1.  Compute the interaction term XZ=X\*Z

2.  Fit a multiple regression model with X, Z, and X\*Z as predictors

3.  Test whether the regression coefficient for XZ (interaction) is
    significant

    3.1 If so, interpret the moderation effect

4.  Display the moderation effect graphically

## Steps for moderation analysis

-   Compute the interaction term XZ=X\*Z

```{r}
#| eval:false
#| 
evals_interact <- evals1 %>%
 mutate(inter=age*gender)
```

-   Center continuous variables

    -   Centering solves two problems:

        -   Interpretation

        -   Multicollinearity

```{r}
evals_interact <- evals1 %>%
  mutate(age_c=datawizard::center(age),gender_trt=ifelse(gender=="female", 0, 1), inter=age_c*gender_trt)
```

## Steps for moderation analysis

-   Fit a multiple regression model with X, Z, and X\*Z as predictors

```{r}
lm(score~age_c*gender_trt, data=evals_interact) %>%
  tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 28)
```

## Steps for moderation analysis

-   Test whether the regression coefficient for X\*Z is significant

## Interpretations

$$\hat{Y}= b_0 + b_1 X + b_2 Z + b_3 X*Z$$

where ( X ) is a continuous predictor and ( Z ) is a dummy coded
categorical predictor.

-   $b_0$: the intercept, or the predicted outcome when X = at mean and
    Z=0
-   $b_1$: the slope of $X$, for a one unit change in $X$ the predicted
    change in $Y$ at $Z = 0$
-   $b_2$: The offset/difference in the intercept for a one unit change
    in $Z$ the predicted change in Y at X = 0 or at the mean
-   $b_3$: The interaction of $X$ and $Z$, the offset in slope for $Z$
    for a one-unit increase in $X$ (or vice versa)

## Interpretations

```{r}
lm(score~age_c*gender_trt, data=evals_interact) %>%
   tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(1, color = "white",
              background = "red")
```

## Interpretations

```{r}
lm(score~age_c*gender_trt, data=evals_interact) %>%
   tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(2, color = "white",
              background = "red")
```

## Interpretations

```{r}
lm(score~age_c*gender_trt, data=evals_interact) %>%
   tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(3, color = "white",
              background = "red")
```

## Interpretations

```{r}
lm(score~age_c*gender_trt, data=evals_interact) %>%
   tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(4, color = "white",
              background = "red")
```

## Moderation: simple slopes

-   If the interaction is significant, then you usually ignore the other
    individual effects (age and gender)

-   So what do I do if my interaction is significant?

. . .

-   **A simple slope analysis**

## Steps for Moderation Analysis

-   Obtain simple slopes

    -   When a continuous independent variable interact with a
        moderating variable, its slope at a particular level of the
        moderating variable

    -   Test if slope $\neq$ 0

```{r}
#hello to our friend emmeans 
library(emmeans)
d=lm(score~age_c*gender_trt, data=evals_interact)

emtrends(d, ~ gender_trt, var="age_c") %>%
  kable()
```

## Simple Slopes

-   `emmeans` does not give p-values for simple slopes

-   `sim_slopes` function from `interactions`

```{r}

library(interactions)

sim_slopes(d, pred=age_c, modx=gender_trt, johnson_neyman = FALSE)

```

## Steps for Moderation Analysis

-   Difference in slopes

    -   *Testing simple slopes is not the same thing as testing their
        difference*

```{r}
d=lm(score~age_c*gender_trt, data=evals_interact)

emtrends(d, pairwise ~ gender_trt, var="age_c")
```

## Interactions

-   You should only be following up interactions if significant!

![](images/gelman.png){fig-align="center"}

## Visualize Categorical by Continuous Interactions

```{r, fig.align='center', out.width="90%"}
ggplot(evals1, aes(x = age, y = score, color = gender)) +
  geom_point() +
  labs(x = "Age", y = "Teaching Score", color = "Gender") +
  geom_smooth(method = "lm", se = FALSE)

```

## Visualize Categorical by Continuous Interactions

-   Parallel slopes models still allow for different intercepts but
    force all lines to have the same slope

```{r, fig.align='center', out.width="80%"}
ggplot(evals1, aes(x = age, y = score, color = gender)) +
  geom_point() +
  labs(x = "Age", y = "Teaching Score", color = "Gender") +
  geom_parallel_slopes(se = FALSE)
```

## Parallel slopes

-   Model Comparisons

    -   Test model without interaction to model with interaction

```{r}

# no inter
main<-lm(score~age_c + gender_trt, data=evals_interact) 

# inter
inter<- lm(score~age_c*gender_trt, data=evals_interact)

anova(main, inter)
```

## Parallel Slopes

::: columns
::: {.column width="50%"}
```{r}
#| fig-align: center
#| 

ggplot(evals_interact, aes(x = age, y = score, color = gender)) +
  geom_point() +
  labs(x = "Age", y = "Teaching Score", color = "Gender") +
  geom_smooth(method = "lm", se = FALSE)
```
:::

::: {.column width="50%"}
```{r}
#| fig-align: center
#| 

ggplot(evals_interact, aes(x = age, y = score, color = gender)) +
  geom_point() +
  labs(x = "Age", y = "Teaching Score", color = "Gender") +
  geom_parallel_slopes(se = FALSE)

```
:::
:::

## Categorical x Continuous Write--up

::: callout-important
All continuous predictors were mean-centered and deviation coding was
used for categorical predictors. The results of the regression indicated
that the model significantly predicted evaluation scores
`r report_performance(d)` accounting for 5% of the variance. Age was a
significant negative predictor of scores, *b* = -0.01, *SE* = .003, 95%
CI \[-0.02, -0.01\], t = -3.89, *p* \< .001, with increases in age being
associated with lower evals. Gender was also significant, *b* = -0.208,
*SE* = .05, 95% CI \[-0.312, -0.105\], t = -3.95, *p* \< .001, with
women having lower evals han men. Importantly, there was a significant
interaction between age and gender, *b* = -0.01, *SE* = .01, 95% CI
\[-0.02, -0.003\], t = -2.45, *p* \< .001). Simple slopes analyss
indicated a significant slope for women, *b* = -0.02, SE = 0.004, 95% CI
\[-0.026, -0.009\], t = -3.92, *p* \< .001, but not men, *b* = 0.004, SE
= 0.003, 95% CI \[-0.01, 0.002\], *t* = -1.23, *p* = 0.22. That is as
one becomes older, being a women leads to lower evaluation scores
:::

# Continuous x Continuous Interactions

## Continuous x Continuous Interactions

```{r}
# grab dataset from link
moderation_vio=read_csv("https://raw.githubusercontent.com/jgeller112/psy503-psych_stats/master/moderation.csv")
```

-   Do violent video games make people aggressive?

    -   DV: Aggression

    -   IV:

        -   Callous unemotional traits
        -   Number of hours spent playing video games per week
        -   Callous unemotional traits\*Number of hours spent playing
            video games per week

-   If callous-unemotional traits were a moderator then we're saying
    that the strength or direction of the relationship between game
    playing and aggression depends on the strength of
    callous-unemotional traits

## Continuous x Continuous Interactions

-   Centering

    -   Can reduce multicollinearity

```{r}
library(datawizard)
# centering vars
moderation_vio <- moderation_vio %>%
  mutate(vid_games_c=center(Vid_Games), caunts_c=center(CaUnTs))

```

## Interpretation Continuous x Continuous Interactions

-   $b_0$: the intercept, or the predicted outcome when X = 0 and Z=0
    (or at their mean)
-   $b_1$: the simple effect or slope of $X$, for a one unit change in
    $X$ the predicted change in $Y$ at $Z = 0$
-   $b_2$: The simple effect or slope of $Z$, for a one unit change in
    $Z$ the predicted change in Y at X = 0
-   $b_3$:The interaction of $X$ and $Z$, the change in the slope of $X$
    for a one-unit increase in $Z$ (or vice versa)

## Interpretation Continuous x Continuous Interactions

```{r}
#| eval: false
lm(Aggression~ vid_games_c*caunts_c,  data=moderation_vio) %>%
  tidy(conf.int=TRUE)
```

```{r}
#| echo: false
#| 

lm(Aggression~ vid_games_c*caunts_c,  data=moderation_vio) %>%
  tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(1, color = "white",
              background = "red")

```

::: notes
(Intercept): the intercept, or the predicted outcome when hours = 0 and
traits = 0. hours: the slope of Hours, for a one unit change in Hours,
the predicted change in weight loss at Effort=0. triat: the slope of
trait, for a one unit change in vio the predicted change in trait at
Hours=0. hours:effort: the interaction of Hours and Effort, the change
in the slope of HRS for every one unit increase in CALLOUSNESS (or vice
versa).
:::

## Interpretation Continuous x Continuous Interactions

```{r, echo=FALSE}
lm(Aggression~ vid_games_c*caunts_c,  data=moderation_vio) %>%
  tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(2, color = "white",
              background = "red")
```

## Interpretation Continuous x Continuous Interactions

```{r, echo=FALSE}
lm(Aggression~ vid_games_c*caunts_c,  data=moderation_vio) %>%
  tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(3, color = "white",
              background = "red")
```

## Interpretation Continuous x Continuous Interactions

```{r, echo=FALSE}
lm(Aggression~ vid_games_c*caunts_c,  data=moderation_vio) %>%
  tidy(conf.int=TRUE) %>%
  knitr::kable() %>%
    kable_styling(font_size = 24) %>%
 row_spec(4, color = "white",
              background = "red")
```

## Continuous X Continuous Interactions

-   If the Z (moderator variable) was categorical, you would be checking
    if separate groups (levels) have different slopes for the
    non-categorical variable

-   However, we cant do that with continuous x continuous interactions

## Decomposing Continuous X Continuous Interactions: Spotlight Analysis

-   For continuous moderator variables, you "create" low, average, and
    high groups

    -   Low groups are people who are one SD below the mean

    -   Average groups are people are at the mean

    -   High groups are people who are one SD above the mean

## Probing Interactions: Spotlight Analysis

-   Low/below mean created by *SUBTRACTING* 1 SD

-   High/above mean created by *ADDING* 1 SD

-   The rule is that we have to bring them to the middle because we
    centered so that zero is the middle

```{r}
#create the low and high z score variables 
a <- mean(moderation_vio$caunts_c) + sd(moderation_vio$caunts_c)

at <- mean(moderation_vio$caunts_c)

b <- mean(moderation_vio$caunts_c) - sd(moderation_vio$caunts_c)

```

------------------------------------------------------------------------

## Spotlight Analysis

```{r}

# create a list for values at a, b, and mean and round them
mylist <- list(caunts_c=c(round(b, 1), round(at,1), round(a, 1)))

# run lm again
d=lm(Aggression~vid_games_c*caunts_c,data=moderation_vio)

# get simple slopes at each level at b a
emtrends(d,~caunts_c, var="vid_games_c", at=mylist)

```

. . .

-   At high levels of callousness, the strength of hours of video games
    predicting aggression is the strongest, b = 0.43

## Probing Interactions

-   Use `interact_plot` from the `interactions`

```{r, fig.align='center', out.width="80%"}
library(interactions)

interact_plot(d, pred = vid_games_c, modx = caunts_c, interval = TRUE, plot.points = TRUE)

```

## Probing Interactions: Johnson-Neyman Plot

::: columns
::: {.column width="50%"}
-   Floodlight analysis on the whole range of the moderator

-   Provides an interval (2 points) where the slope of a predictor is
    not statistically significant across different values of the
    mediator

```{r}
johnson_neyman(model = d, pred = vid_games_c,
  modx = caunts_c, control.fdr = TRUE) # important bc otherwise does not correct for multiple comparisons
```
:::

::: {.column width="50%"}
```{r}
knitr::include_graphics("images/JNplot.png")

```
:::
:::

## Moderation: MeMoBootR

-   We can use the `MeMoBootR` to complete the entire processing,
    including data screening for us!

-   You would enter the raw variables, as the centering is completed for
    you

```{r}
#devtools::install_github("doomlab/MeMoBootR")
library(MeMoBootR)
mod_model <- moderation1(y = "Aggression",
                         x = "Vid_Games",
                         m = "CaUnTs",
                         df = moderation_vio)
```

## Moderation: MeMoBootR

```{r}
#data screenin
#mod_model$datascreening$fulldata
#models
#summary(mod_model$model1)
#mod_model$interpretation
#graphs
#mod_model$graphslopes
```

## Power

```{r}

WebPower::wp.regression(n=NULL, p1=3, p2=0, f2=.2, alpha=.05, power=.9)

```

## Power

-   `InteractionPoweR`

```{r}
#install.packages("InteractionPoweR")
library(InteractionPoweR)

```

-   All we need is:

    -   Correlations

        -   X1-Y

        -   X2-Y

        -   X1X2-Y

        -   X1-X2

```{=html}
<!-- -->
```
-   <https://mfinsaas.shinyapps.io/InteractionPoweR/>
