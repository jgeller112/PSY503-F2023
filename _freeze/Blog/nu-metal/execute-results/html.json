{
  "hash": "bba1765717b9fe4060ec27055ff728c0",
  "result": {
    "markdown": "---\ntitle: \"Blog Example\"\nauthor: \"Jason Geller, Ph.D.\"\nsidebar: false\ntoc: true\npage-layout: full\nexecute: \n  freeze: auto\n  message: false\n---\n\n\n# NuMetalR\n\nIt was recently announced that nu-metal pioneers, Korn, have partnered with a makeup company to turn their iconic 3rd record, *Follow The Leader*, into a color palette.\n\n![](images/makeup_korn.png){fig-align=\"center\"}\n\nInspired by this, I wanted to bring the world of nu-metal into R and the awesome visualization tool `ggplot`. Did anyone ask for this? No. Does anyone want this? Also no.\n\n## `paletteer`\n\n![](images/image-1483850725.png){fig-align=\"center\"}\n\nI stumbled upon the R package `paletter` that allows you to take any picture and extract the optimized palette. It does this by using an unsupervised learning technique (k-means clustering).\n\nIt is pretty simple to use. I will show you how.\n\n## Korn - It's On!\n\nFirst, you need to save the location of the image file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here) # relative path\nlibrary(paletter) # package to\nlibrary(ggplot2)\n#extract color palette\n\nimage_path <- here::here(\"Blog\", \"images\", \"Korn.jpeg\")\n```\n:::\n\n\n![](images/Korn.jpeg)\n\nThen you can read that file into a function from the package\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the color palette\ncolours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                           type_of_variable = \"categorical\")\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n\nOnce you do this, it will output a list of hex codes corresponding to the most representative colors in the image.\n\nLet's put the hex codes side by side with the album art:\n\n![](images/korn_pal_ftl.png){fig-align=\"center\"}\n\nSo here we have a color palette associated with the album *Follow The Leader.* Let's see how it looks on some data.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +\n  geom_point(size=2) +\n  scale_color_manual(values=colours_vector[1:3])\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n# Other Nu-Metal Album Classics\n\nI decided to do this with a few other popular artists from my childhood. Let's do a *Fallen* palette.\n\n## Evanescence - Fallen\n\nWake me up! I can't wake up! Sorry. I am getting too pumped up for this.\n\n![](images/fallen1.jpeg){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_path <-here::here(\"Blog\", \"images\",\"fallen1.jpeg\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the color palette\ncolours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                            type_of_variable = \"categorical\")\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n![](images/even_fallen.png){fig-align=\"center\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +\n  geom_point(size=2) +\n  scale_color_manual(values=colours_vector[1:3])\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Limp Bizkit - Significant Other\n\n![](images/LB.jpeg){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_path <- here::here(\"Blog\", \"images\",\"LB.jpeg\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the color palette\ncolours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                            type_of_variable = \"categorical\")\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n![](images/LB-color.png)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +\n  geom_point(size=2) +\n  scale_color_manual(values=colours_vector[1:3])\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Linkin Park - Hybrid Theory\n\n![](images/LP.jpeg){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_path <- here::here(\"Blog\", \"images\",\"LP.jpeg\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the color palette\ncolours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                            type_of_variable = \"categorical\")\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n:::\n\n\n![](images/LP_hybrid.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|fig-align: \"center\"\n\nggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +\n  geom_point(size=2) +\n  scale_color_manual(values=colours_vector[1:3])\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Slipknot - Self-titled\n\n![](images/slipknot.jpeg){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_path <- here::here(\"Blog\", \"images\",\"slipknot.jpeg\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolours_vector <- create_palette(image_path = image_path,                            number_of_colors =10,                            type_of_variable = \"categorical\")\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n\n\n![](images/slip_pal.png)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +\n  geom_point(size=2) +\n  scale_color_manual(values=colours_vector[3:6])\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n# R Package\n\nI bundled all the hex codes in a package called `NuMetalR`<https://github.com/jgeller112/NuMetalR>.\n\nI use the function `nu-paelettes` to extract hex codes associated with a band.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"Blog\", \"R\", \"nu_palettes.R\"))\n\nkorn_color= nu_palettes(\"korn\")\n\nkorn_color\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"#D01809\" \"#EC3D09\" \"#830301\" \"#B95011\" \"#DDA547\" \"#D45F1D\" \"#EDCA79\"\n [8] \"#A4672A\" \"#AA5829\" \"#A4672A\" \"#FBE477\"\n```\n:::\n:::\n\n\n`print.palette` prints out the actual colors from the hex codes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# print colors\nprint.palette(korn_color)\n```\n\n::: {.cell-output-display}\n![](nu-metal_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "nu-metal_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}