{
  "hash": "8713bc3bf6dd33ff1bb211983d4945f1",
  "result": {
    "markdown": "---\ntitle: \"prob_class_viz\"\neditor: visual\nexecute:\n  freeze: auto\n  echo: true\n  message: false\n  warning: false\n  fig-align: \"center\"\n  fig-width: 8\n  fig-height: 4\n  editor_options: \n  chunk_output_type: inline\n  code-overflow: wrap\n  html:\n    code-fold: true\n    code-tools: true\n  filters:\n  - webr\n---\n\n\n## Outline\n\n-   Probability - what is it?\n\n-   Random processes and variables\n\n-   Probability distributions\n\n-   DGP\n\n-   `ggplot` primer\n\n-   Visualizing variance\n\n## Packages\n\n\n::: {.cell}\n\n:::\n\n\n\n## Probability warm-up\n\n1.  What is probability of drawing the ace of spades from a fair deck of\n    cards?\n\n2.  What is the probability of drawing an ace of any suit?\n\n3.  You are going to roll some dice twice. What is the probability you\n    roll doubles?\n\n4.  What is the chance that a live specimen of the New Jersey Devil will\n    be found?\n\n5.  Who is more likely to be a victim of a street robbery, a young man\n    or an old woman?\n\n## Frequentist interpretation of probability\n\n-   Classical statistical inference is based off this interpretation\n\n\n```{=html}\n<!-- -->\n```\n\n-   The frequentist approach treats probabilities as relative\n    frequencies\n\n    -   If we say that the probability of rolling a 5 on a fair die is\n        1/6, we mean that, ***if the die were rolled an infinite number\n        of times***, 1/6 of all rolls would be a 5\n\n## What probability is not\n\n<center>{{< video https://www.youtube.com/watch?v=WFoC3TR5rzI width=\"600\" height=\"400\" >}}</center>\n\n## What is probability theory?\n\n-   Probability is the study of **random processes**\n\n    -   Probability is used to characterize **uncertainty/randomness**\n\n        ![](https://psy503-found-stats.netlify.app/slides/05-probability/probability-line.svg){width=\"790\"}\n\n## Random processes: intuition\n\n::: columns\n::: {.column width=\"50%\"}\n-   Let's flip a fair coin\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoinflips <- function(x) { \n  flip=rbinom(x, 1, 0.5) \nflip=ifelse(flip==1, \"Tails\", \"Heads\") \n\nreturn(flip) \n}\n\ncoinflips(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Heads\"\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n1.  Can you tell me what the outcome will be?\n\n2.  If we were to flip a fair coin many many times, would you be able to\n    tell the proportion of times that we would obtain heads?\n:::\n:::\n\n. . .\n\n-   If answer to first question is \"NO\" AND Answer to second question is\n    \"YES\"\n    -   You are dealing with a random process\n\n## Random processes\n\n-   Random processes are mechanisms that produce outcomes... from a\n    world/set of possible outcomes... with some degree of uncertainty\n    but with regularity\n\n## Examples of random processes\n\n-   Random assignment in experiments\n\n. . .\n\n-   Random dram of a sample of n individuals from a population of N\n    individuals\n\n. . .\n\n-   Rolling a die\n\n## What is a random variable?\n\n-   A variable that depends on a random process\n\n    -   Think about the following random phenomenon: \"randomly selecting\n        2 students in this class room\"\n\n        -   Sample space?\n\n            -   One possible outcome:\n                $\\omega = \\{\\mathrm{Ari, \\: Alex}\\}$\n\n            -   Another possible outcome:\n                $\\omega = \\{\\mathrm{Aditi, \\: Brooke}\\}$\n\n## What is a random variable?\n\n-   Can this be considered a random variable?\n\n. . .\n\n-   No. Random variables are always numeric\n\n-   We operate on random variables using math\n\n## Illustration\n\n-   Random variables are mappings from events to numbers\n\n-   Formally, a random variable is defined as a function that maps the\n    sample space $\\Omega$ of a random generative process into the real\n    line (or into real numbers)\n\n![](images/coin_toss.jpg){fig-align=\"center\"}\n\n## Probability distribution functions\n\n-   Two types of random variables\n\n    -   Discrete\n\n    -   Continuous\n\n-   The **distribution** of a random variable $X$ describes the\n    likelihood of the values that $X$ can take\n\n## Discrete random variables: definition\n\n::: columns\n::: {.column width=\"50%\"}\n-   Discrete random variables are defined on a range that is a countable\n    set\n\n-   i.e., they can only take on a **finite** or **countably infinite**\n    number of different values\n:::\n\n::: {.column width=\"50%\"}\n![](images/discont.jpg){fig-align=\"center\"}\n:::\n:::\n\n## Probability mass function (PMF)\n\n-   Let $X$ be a discrete random variable\n\n-   The *probability mass function (PMF)* of $X$ summarizes the\n    probability of each outcome $x$\n\n-   PMF: function $p$ given by $$P(X = x)$$\n\n    -   $X$ = RV\n\n    -   $x$ = value\n\n## Example: Dessert tonight\n\nImagine that you started a strict diet a few days ago. You are at a\ndinner party at your friend's who made your favorite dessert. You are\nvery tempted and make the decision to flip a coin three times. The\nnumber of times that the flip coin returns tail determines the number of\nbites of the dessert you will have. Before you start flipping the coin,\nyou want to learn more about your chances of not having dessert tonight.\nTo do that, you decide to look at the possible outcomes. You let 𝑋 be\nthe number of times a series of three coin flips returns tails (T). The\nsupport of 𝑋 is {0, 1, 2, 3}.\n\n## Dessert tonight\n\n\n::: {.cell}\n\n```{.r .cell-code}\noutcomes <- c('H', 'T')\nsample_space <- expand.grid(outcomes, outcomes, outcomes)\nsample_space\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Var1 Var2 Var3\n1    H    H    H\n2    T    H    H\n3    H    T    H\n4    T    T    H\n5    H    H    T\n6    T    H    T\n7    H    T    T\n8    T    T    T\n```\n:::\n:::\n\n\n## PMF: Dessert tonight\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## Cumulative distribution function (CDF): definition\n\n::: columns\n::: {.column width=\"50%\"}\n-   The CDF of a random variable is the function $F$ such that\n\n    -   $F(x) = P(X \\leq x)$\n\n-   CDF tells us the probability that an outcome below a specific\n    outcome occurs\n\n-   Sums to 1\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## Continuous random variables: Definition\n\n::: columns\n::: {.column width=\"50%\"}\n-   A continuous random variable is a variable that can take on an\n    infinite number of values within a given range or interval\n:::\n\n::: {.column width=\"50%\"}\n![](images/discont.jpg){fig-align=\"center\"}\n:::\n:::\n\n## Probability Density Function (PDF): Definition\n\n::: columns\n::: {.column width=\"50%\"}\n-   PDF is continuous version of PMF\n-   The PDF of a random continuous variable is the function $F$ such\n    that $F(x) = P(a \\geq X \\geq b)$\n-   PDF tells us the probability of range of outcomes\n:::\n\n::: {.column width=\"50%\"}\n-   What is probability of observing IQ between 100 and 125?\n\n![](https://psy503-found-stats.netlify.app/slides/05-probability/basics_of_probability_theory_files/figure-html/unnamed-chunk-28-1.png){fig-align=\"center\"\nwidth=\"687\"}\n:::\n:::\n\n## CDF\n\n-   ::: {.column width=\"50%\"}\n\n    $F(x) = P(X \\leq x)$\n    :::\n\n    ![](https://psy503-found-stats.netlify.app/slides/05-probability/basics_of_probability_theory_files/figure-html/unnamed-chunk-29-1.png){width=\"896\"}\n\n## Summarizing random variables\n\n-   PMFs, PDFs, CDFs are very useful tools to summarize information from\n    rvs.\n\n-   Many other ways to summarize random variables!\n\n    -   e.g., mean, median, standard deviation, etc.\n\n## Our goal as statisticians\n\n::: columns\n::: {.column width=\"50%\"}\n![](https://bookdown.org/cristobalmoya/iscs_materials/img/producing_data_inferences.png){fig-align=\"center\"\nwidth=\"706\" height=\"367\"}\n:::\n\n::: {.column width=\"50%\"}\nLink probability distributions to the data generating process (DGP)\n\n-   The data generating process (GDP) represents the \"real-world\"\n    process of how data comes about\n\n-   Probability distributions are mathematical models used to model and\n    understand the DGP\n:::\n:::\n\n## DGP\n\n::: columns\n::: {.column width=\"50%\"}\n-   **Bottom-up**: This approach begins with the observed data. By\n    examining the data distribution, one might make educated guesses or\n    inferences about the underlying processes that produced it\n\n-   **Top-down**: This approach relies on pre-existing knowledge or\n    theories about the system or phenomenon in question to inform our\n    understanding of the DGP\n:::\n\n::: {.column width=\"50%\"}\n![](https://psy503-found-stats.netlify.app/slides/04-models/distribs.png){fig-align=\"center\"\nwidth=\"750\" height=\"482\"}\n:::\n:::\n\n## Bootstrapping\n\n-   ::: columns\n    ::: {.column width=\"50%\"}\n    -   Sampling with replacement\n\n        -   A computer based method for deriving the probability\n            distribution for any random variable\n\n        -   How to do it\n\n            -   Run your analysis a bunch of times with a slightly\n                different set of observations each time\n    :::\n\n    ::: {.column width=\"50%\"}\n    -   Dice roll\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    x=1:6\n    \n    sample(x, 6, replace=TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 6 6 2 1 2 4\n    ```\n    :::\n    \n    ```{.r .cell-code}\n    sample(x, 6, replace=TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 1 5 2 1 1 4\n    ```\n    :::\n    \n    ```{.r .cell-code}\n    sample(x, 6, replace=TRUE)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] 5 6 5 4 2 4\n    ```\n    :::\n    :::\n\n    :::\n    :::\n\n::: notes\nOnce we have an idea about the DGP we can simulate data to see if it\nconforms to expectations.\n\nSampling helps us build up our intuitions about probability\ndistributions\n\nThe book talks about dice rolls.\n\nWhat are some others?\n:::\n\n## Bootstrapping\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-7-1.png){width=768}\n:::\n:::\n\n\n## Sources of Variance\n\n-   There is uncertainty associated with the DGP\n\n::: panel-tabset\n## Types of Error\n\n![](images/var.png){fig-align=\"center\"}\n\n## Unexplained Error\n\n![](images/var1.png){fig-align=\"center\"}\n\n## Sources of Unexplained Error\n\n![](images/var3.png){fig-align=\"center\"}\n:::\n\n## Randomness\n\n-   Shuffling (permutation tests)\n\n    ::: columns\n    ::: {.column width=\"50%\"}\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    knitr::include_url(\"https://www.jwilber.me/permutationtest/\", height = \"800px\")\n    ```\n    \n    <iframe src=\"https://www.jwilber.me/permutationtest/\" width=\"768\" height=\"800px\" data-external=\"1\"></iframe>\n    :::\n\n    :::\n\n    ::: {.column width=\"50%\"}\n    ![](images/Screen Shot 2023-09-18 at 2.21.43 PM.png)\n    :::\n    :::\n\n## Visualizing variance\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/ggplot.jpg){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n-   `ggplot2` is tidyverse's data visualization package (`plotnine` in\n    Python uses similar syntax)\n\n-   The gg in `ggplot2` stands for Grammar of Graphics\n\n    -   It is inspired by the book Grammar of Graphics by Leland\n        Wilkinson\n\n    -   A grammar of graphics is a tool that enables us to concisely\n        describe the components of a graphic\n:::\n:::\n\n## `ggplot2`\n\n![](images/ggplot_aes.png){fig-align=\"center\"}\n\n## `ggplot2`\n\nLet's start with a blank canvas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot()\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-9-1.png){width=768}\n:::\n:::\n\n\n## `ggplot2` - Data\n\n::: columns\n::: {.column width=\"50%\"}\n![](https://allisonhorst.github.io/palmerpenguins/logo.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm))+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=768}\n:::\n:::\n\n:::\n:::\n\n## `ggplot2` - Layers\n\n-   Let's add a geom\n\n    -   `geom_point` adds a dot for each raw data point\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm)) +\n          geom_point()+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2` - Layers\n\n-   Let's add another geom\n\n    -   `geom_smooth` plots a smoothed line for the data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\n    ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm)) +\n      geom_smooth()+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2` Layers\n\n-   Maybe a linear line\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\n    ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm)) +\n      geom_smooth(method=\"lm\")+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2` - Layers\n\n-   It might be nice to see the raw data WITH the line. We can combine\n    geoms!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\n    ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm)) +\n  geom_point() + \n      geom_smooth(method=\"lm\")+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2` - Size\n\n-   Points are a bit small. Let's make them bigger!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\n    ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm)) +\n  geom_point(size = 2, alpha=.3) + \n      geom_smooth(method=\"lm\")+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2` - Color\n\n-   How could we add information about different types of penguins?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1\"}\n    ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm, color=species)) +\n  geom_point(size = 4)+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2`- Axes\n\n-   Let's clean up our plot\n\n    -   Add clearer axis labels\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\n    ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm, color=species)) +\n  geom_point(size = 4) + \n  xlab(\"Bill Length in milimters\") + \n  ylab(\"Flipper Length in milimeters\")+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-17-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2` - Title\n\n::: columns\n::: {.column width=\"50%\"}\n-   Let's clean up our plot\n\n-   Add title\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\ntitle <- ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm, color=species)) +\n          geom_point(size = 4) + \n          xlab(\"Bill Length in milimters\") + \n          ylab(\"Flipper Length in milimeters\") + \n          ggtitle(\"Palmer Penguins: Bill length vs Flipper length\") +\n  theme_minimal(base_size = 16)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-19-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## `ggplot2` - Themes\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\ntheme_plot <-  ggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm, color=species)) +\n              geom_point(size = 4) + \n              xlab(\"Bill Length in milimters\") + \n              ylab(\"Flipper Length in milimeters\") + \n              ggtitle(\"Palmer Penguins: Bill length vs Flipper length\") + \n              theme_dark(base_size = 16)\ntheme_plot\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-20-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## `ggplot2` - Themes\n\n::: columns\n::: {.column width=\"50%\"}\n\n![](https://github.com/BlakeRMills/MetBrewer/raw/main/PaletteImages/Hex/MetBrewerHex.jpg){fig-align=\"center\"\nwidth=\"262\"}\n\n![](https://github.com/BlakeRMills/MetBrewer/blob/main/PaletteImages/VanGogh2.png?raw=true){fig-align=\"center\"\nwidth=\"334\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MetBrewer)\n#| code-line-numbers: \"6\"\n#| fig-align: center\n\nggplot(data=penguins, mapping = aes(x=bill_length_mm, y = flipper_length_mm, color=species)) +\n              geom_point(size = 4) + \n              xlab(\"Bill Length in milimters\") + \n              ylab(\"Flipper Length in milimeters\") + \n              ggtitle(\"Palmer Penguins: Bill length vs Flipper length\") + # Changes legend title, and selects a colour-palette\n  scale_colour_manual(\n                    values = MetBrewer::met.brewer(\"VanGogh2\",3)) + \n              theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-21-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## `ggplot2` - Themes\n\n::: columns\n::: {.column width=\"50%\"}\n![](https://user-images.githubusercontent.com/52077481/255932691-4c2e2885-d879-46e6-b61d-b253d8382597.png){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"remotes\")\n#remotes::install_github(\"MatthewBJane/ThemePark\")\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(\"ThemePark\")\n\n`X variable` <- rnorm(50, 0, 1)\n`Y variable` <- rnorm(50, 0, 1)\n\n\nggplot(data = data.frame(x = `X variable`, y = `Y variable`), aes(x = x, y = y)) +\n  geom_smooth(method = 'lm', color = barbie_theme_colors[\"medium\"]) +\n  geom_point() +\n  labs(title = 'Barbie Scatter Plot') +\n  theme_barbie()\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-23-1.png){fig-align='center' width=768}\n:::\n:::\n\n:::\n:::\n\n## Visualizing Variance\n\n## Disclaimer\n\n\\- More information is always better!\n\n-   Avoid visualizing single numbers when you have a whole distribution\n    of numbers\n\n![](https://pbs.twimg.com/media/Ei5qvgNVoAAV1Ay.png){fig-align=\"center\"}\n\n# Histograms\n\n## Histograms\n\n-   Put data into equally spaced buckets (or bins), plot how many rows\n    are in each bucket\n\n    ::: columns\n    ::: {.column width=\"50%\"}\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(gapminder)\n    gapminder_2002 <- gapminder %>% \n          filter(year == 2002)\n    \n    ggplot(gapminder_2002,\n               aes(x = lifeExp)) +\n          geom_histogram()+\n          theme_minimal(base_size = 16)\n    ```\n    \n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-24-1.png){width=768}\n    :::\n    :::\n\n    :::\n    :::\n\n------------------------------------------------------------------------\n\n## `ggdist`\n\n-   Put data into equally spaced buckets (or bins), plot how many rows\n    are in each bucket\n\n    ::: columns\n    ::: {.column width=\"50%\"}\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(ggdist)\n            gapminder_2002 <- gapminder %>% \n              filter(year == 2002)\n    \n            fig=ggplot(gapminder_2002,\n                   aes(x = lifeExp)) +\n              geom_dots()+\n          theme_minimal(base_size = 16)\n    ```\n    :::\n\n    :::\n\n    ::: {.column width=\"50%\"}\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-26-1.png){width=768}\n    :::\n    :::\n\n    :::\n    :::\n\n------------------------------------------------------------------------\n\n## Histograms: Bin width\n\n-   Range of values in each bar or dot\n\n    ::: panel-tabset\n    ## Narrow\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code  code-line-numbers=\"2\"}\n    ggplot(gapminder_2002, aes(x = lifeExp)) +\n       geom_histogram(binwidth = .2) +\n      theme_minimal(base_size = 16)\n    ```\n    \n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-27-1.png){fig-align='center' width=768}\n    :::\n    :::\n\n\n    ## Big\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code  code-line-numbers=\"2\"}\n    ggplot(gapminder_2002, aes(x = lifeExp)) +\n       geom_histogram(binwidth = 20) +\n      theme_minimal(base_size = 16)\n    ```\n    \n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-28-1.png){fig-align='center' width=768}\n    :::\n    :::\n\n\n    ## Perfect\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code  code-line-numbers=\"2\"}\n     ggplot(gapminder_2002, aes(x = lifeExp)) +\n          geom_histogram(binwidth = 2) +\n      theme_minimal(base_size = 16)\n    ```\n    \n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-29-1.png){fig-align='center' width=768}\n    :::\n    :::\n\n    :::\n\n------------------------------------------------------------------------\n\n## Histogram tips\n\n::: columns\n::: {.column width=\"50%\"}\n-   Add a border to the bars<br>for readability\n\n    -   `geom_histogram(..., color = \"green\")`\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(gapminder_2002, aes(x = lifeExp)) +\n   geom_histogram(binwidth = 2, color=\"green\") +\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-30-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## Histogram tips\n\n::: columns\n::: {.column width=\"50%\"}\n-   Set the boundary\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(gapminder_2002, aes(x = lifeExp)) +\n   geom_histogram(binwidth = 2, color=\"white\", boundary=50) +\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-31-1.png){fig-align='center' width=768}\n:::\n:::\n\n:::\n:::\n\n## Density plots\n\n-   Use calculus to find the probability of each x value\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code}\n    #|code-line-numbers: \"2\"\n    \n    \n    ggplot(gapminder_2002, aes(x = lifeExp)) +\n      geom_density(fill = \"grey60\", color = \"grey30\")+\n      theme_minimal(base_size = 16)\n    ```\n    \n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-32-1.png){fig-align='center' width=768}\n    :::\n    :::\n\n\n## Density plots: Kernels and bandwidths\n\n::: columns\n::: {.column width=\"50%\"}\n-   Different options for calculus change the plot shape\n\n    -   Kernels - Smooth data points\n\n    -   bandwidth - how wide\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_2002, aes(x = lifeExp)) +\n  geom_density(fill = \"grey60\", color = \"grey30\")+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-33-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n# Boxplots\n\n## Boxplots\n\n-   Show specific distributional numbers\n\n    ::: columns\n    ::: {.column width=\"50%\"}\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code  code-line-numbers=\"2\"}\n    box <- ggplot(gapminder_2002,\n           aes(x = lifeExp)) +\n      geom_boxplot()+\n      theme_minimal(base_size = 16)\n    ```\n    :::\n\n    :::\n\n    ::: {.column width=\"50%\"}\n\n    ::: {.cell}\n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-35-1.png){width=768}\n    :::\n    :::\n\n    :::\n    :::\n\n## Five number summary\n\n![](boxplot-explanation-1.png){fig-align=\"center\"}\n\n# Categorical Variables\n\n## Bar charts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fivethirtyeight)\n# Using ggplot2 to plot the data\ncandy_rankings %>%\n  # Sorting the data to have the highest percentages at the top\n  arrange(-winpercent) %>%\n  # Taking the top n candies (optional, you can remove the following line if you want all)\n  top_n(20, wt = winpercent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 13\n   competitorname              chocolate fruity caramel peanutyalmondy nougat\n   <chr>                       <lgl>     <lgl>  <lgl>   <lgl>          <lgl> \n 1 Reese's Peanut Butter cup   TRUE      FALSE  FALSE   TRUE           FALSE \n 2 Reese's Miniatures          TRUE      FALSE  FALSE   TRUE           FALSE \n 3 Twix                        TRUE      FALSE  TRUE    FALSE          FALSE \n 4 Kit Kat                     TRUE      FALSE  FALSE   FALSE          FALSE \n 5 Snickers                    TRUE      FALSE  TRUE    TRUE           TRUE  \n 6 Reese's pieces              TRUE      FALSE  FALSE   TRUE           FALSE \n 7 Milky Way                   TRUE      FALSE  TRUE    FALSE          TRUE  \n 8 Reese's stuffed with pieces TRUE      FALSE  FALSE   TRUE           FALSE \n 9 Peanut butter M&M's         TRUE      FALSE  FALSE   TRUE           FALSE \n10 Nestle Butterfinger         TRUE      FALSE  FALSE   TRUE           FALSE \n11 Peanut M&Ms                 TRUE      FALSE  FALSE   TRUE           FALSE \n12 3 Musketeers                TRUE      FALSE  FALSE   FALSE          TRUE  \n13 Starburst                   FALSE     TRUE   FALSE   FALSE          FALSE \n14 100 Grand                   TRUE      FALSE  TRUE    FALSE          FALSE \n15 M&M's                       TRUE      FALSE  FALSE   FALSE          FALSE \n16 Nestle Crunch               TRUE      FALSE  FALSE   FALSE          FALSE \n17 Rolo                        TRUE      FALSE  TRUE    FALSE          FALSE \n18 Milky Way Simply Caramel    TRUE      FALSE  TRUE    FALSE          FALSE \n19 Skittles original           FALSE     TRUE   FALSE   FALSE          FALSE \n20 Hershey's Krackel           TRUE      FALSE  FALSE   FALSE          FALSE \n# ℹ 7 more variables: crispedricewafer <lgl>, hard <lgl>, bar <lgl>,\n#   pluribus <lgl>, sugarpercent <dbl>, pricepercent <dbl>, winpercent <dbl>\n```\n:::\n:::\n\n\n## Bar plots\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-37-1.png){width=768}\n:::\n:::\n\n\n# Exploring quantitative variables\n\n-   Scatter plots\n\n![](https://indrajeetpatil.github.io/ggstatsplot/reference/figures/logo.png){fig-align=\"center\"\nwidth=\"196\"}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-38-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n# Categorical x Continuous\n\n## Exploring multiple groups\n\n-   **Visualize the distribution of a\\\n    single variable across groups**\n\n-   **Add a `fill` aesthetic or use faceting!**\n\n## Multiple histograms\n\n-   This looks bad and is hard to read\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(gapminder_2002,\n       aes(x = lifeExp,\n           fill = continent)) +\n  geom_histogram(binwidth = 5, \n                 color = \"white\", \n                 boundary = 50) +\n  guides(fill = \"none\") +\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-39-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## Multiple histograms\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\n ggplot(gapminder_2002,\n       aes(x = lifeExp,\n           fill = continent)) +\n  geom_histogram(binwidth = 5, \n                 color = \"white\", \n                 boundary = 50) +\n  guides(fill = \"none\") +\n  facet_wrap(vars(continent))+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-40-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## Pyramid histograms\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder_intervals <- gapminder %>% \n  filter(year == 2002) %>% \n  mutate(africa = \n           ifelse(continent == \"Africa\", \n                  \"Africa\", \n                  \"Not Africa\")) %>% \n  mutate(age_buckets = \n           cut(lifeExp, \n               breaks = seq(30, 90, by = 5))) %>% \n  group_by(africa, age_buckets) %>% \n  summarize(total = n())\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gapminder_intervals, \n       aes(y = age_buckets,\n           x = ifelse(africa == \"Africa\", \n                      total, -total),\n           fill = africa)) +\n  geom_col(width = 1, color = \"white\")+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-42-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## **Multiple densities: Transparency**\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\np4 <- ggplot(filter(gapminder_2002, \n              continent != \"Oceania\"),\n       aes(x = lifeExp,\n           fill = continent)) +\n  geom_density(alpha = 0.2)+\n  theme_minimal(base_size = 16)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-44-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## **Multiple densities: Ridge plots**\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nlibrary(ggridges)\nggplot(filter(gapminder_2002, \n              continent != \"Oceania\"),\n       aes(x = lifeExp,\n           fill = continent,\n           y = continent)) +\n  geom_density_ridges()+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-45-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## Multiple Box plots\n\n::: columns\n::: {.column width=\"50%\"}\n-   Boxplots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://raw.githubusercontent.com/z3tt/DataViz-Teaching/master/data/weissgerber-data.csv\"\ndata <- read_csv(url)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = group, y = value, color = group, fill = group)) +\n  scale_y_continuous(breaks = 1:9) +\n  geom_boxplot(alpha = .5, size = 1.5, outlier.size = 5) + \n  theme_minimal(base_size = 16) + \n  theme(legend.position =  \"none\")\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-47-1.png){width=768}\n:::\n:::\n\n:::\n:::\n\n## Violin plots\n\n-   Density plot rotated 90 degrees and mirrored\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code  code-line-numbers=\"2:6\"}\n    ggplot(data, aes(x = group, y = value)) +\n      # create the violin plot\n           geom_violin(\n            aes(fill = group, fill = after_scale(colorspace::lighten(fill, .5))),\n            size = 1.2, bw = .8\n          ) +\n      theme_minimal(base_size = 16)+\n      # delete the legend information\n            theme(legend.position =  \"none\")\n    ```\n    \n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-48-1.png){fig-align='center' width=768}\n    :::\n    :::\n\n\n## Are violin plots bad?\n\n<center>{{< video hhttps://www.youtube.com/watch?v=_0QMKFzW9fw width=\"600\" height=\"400\" >}}</center>\n\n## Half violin plots + Box\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2:3\"}\n# Create the plot\nggplot(data, aes(x = group, y = value, fill=group)) +\n  # Half violin plot with ggdist\n  stat_halfeye()+\n  # Distributional boxplot (similar to standard boxplot but with more flexibility)\n  geom_boxplot(width = 0.1, outlier.shape = NA, fill = \"white\")+\n  theme_minimal(base_size = 16) + \n    theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-49-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## Strip plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data, aes(x = group, y = value, fill=group)) +\n  # get the jitter points\n   geom_jitter(position=position_jitter(0.2)) + \n  #removed legend\n  theme_minimal(base_size = 16) + \n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-50-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## Strip plots\n\n-   Add summary stats\n\n\n    ::: {.cell layout-align=\"center\"}\n    \n    ```{.r .cell-code  code-line-numbers=\"3\"}\n    ggplot(data, aes(x = group, y = value, fill=group)) +\n       geom_jitter(position=position_jitter(0.2)) + \n       stat_summary(fun.y=median, geom=\"point\", shape=18,\n                     size=3, color=\"red\")+\n      #removed legend\n      theme(legend.position = \"none\")+\n      theme_minimal(base_size = 16)\n    ```\n    \n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-51-1.png){fig-align='center' width=768}\n    :::\n    :::\n\n\n## Raincloud plots\n\n::: columns\n::: {.column width=\"50%\"}\nHalf violin plots + box + raw points\n\n![](https://github.com/jorvlan/open-visualizations/raw/master/R/package_figures/Rplot03.png){fig-align=\"center\"\nwidth=\"365\"}\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nlibrary(ggrain)\nggplot(data, aes(x = group, y = value, fill=group)) +\n  # raincloud plots\n  geom_rain() + \n  #removed legend\n  theme_minimal(base_size = 16) + \n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-52-1.png){fig-align='center' width=768}\n:::\n:::\n\n:::\n:::\n\n## Raincloud Plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(filter(gapminder_2002, \n              continent != \"Oceania\"),\n       aes(y = lifeExp,\n           x = continent,\n           color = continent)) + \n  geom_rain() + \n  coord_flip()+\n  theme_minimal(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-53-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## Multiple Geoms\n\n::: columns\n::: {.column width=\"50%\"}\n-   Multiple Geoms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gghalves)\np6 <- ggplot(filter(gapminder_2002, \n              continent != \"Oceania\"),\n       aes(y = lifeExp,\n           x = continent,\n           color = continent)) +\n  geom_half_boxplot(side = \"l\") +\n  geom_half_point(side = \"r\") + theme(legend.position  = \"none\")+\n  theme_minimal(base_size = 16)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](viz_prob_notebook_files/figure-html/unnamed-chunk-55-1.png){fig-align='center' width=768}\n:::\n:::\n\n:::\n:::\n\n## Categorical vs. Categorical\n\n-   Stacked barplots\n\n\n    ::: {.cell layout-align=\"center\"}\n    ::: {.cell-output-display}\n    ![](viz_prob_notebook_files/figure-html/unnamed-chunk-56-1.png){fig-align='center' width=768}\n    :::\n    :::\n",
    "supporting": [
      "viz_prob_notebook_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}